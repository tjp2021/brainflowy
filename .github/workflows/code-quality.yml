name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  prettier:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install Prettier
        run: npm install -g prettier
        
      - name: Check formatting
        run: |
          prettier --check "**/*.{js,jsx,ts,tsx,json,css,scss,md}" \
            --ignore-path .prettierignore \
            --config .prettierrc.js

  eslint:
    name: ESLint Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            **/*.js
            **/*.jsx
            **/*.ts
            **/*.tsx
            
      - name: List changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Changed files:"
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "  $file"
          done
          
      - name: Run ESLint on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          eslint_flags: '--ext .js,.jsx,.ts,.tsx'
          level: warning

  commitlint:
    name: Commit Message Lint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install commitlint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional
          
      - name: Validate PR commits
        run: |
          npx commitlint \
            --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} \
            --to ${{ github.event.pull_request.head.sha }} \
            --verbose

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run markdownlint
        uses: DavidAnson/markdownlint-cli2-action@v14
        with:
          globs: |
            **/*.md
            !node_modules
            !frontend/node_modules
            !backend/node_modules